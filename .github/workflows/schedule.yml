name: schedule

on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  aarch64:
    uses: ./.github/workflows/build.yml
    with:
      target: aosp_arm64
    secrets: inherit

  x86_64:
    uses: ./.github/workflows/build.yml
    with:
      target: aosp_x86_64
    secrets: inherit

  riscv64:
    uses: ./.github/workflows/build.yml
    with:
      target: aosp_cf_riscv64_phone
    secrets: inherit

  build:
    needs: [aarch64, x86_64, riscv64]

    runs-on: ubuntu-latest

    permissions:
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Prepare
        run: |
          mkdir build
          mv build-aosp_arm64/aosp_arm64.tar.gz build/aarch64.tar.gz
          mv build-aosp_x86_64/aosp_x86_64.tar.gz build/x86_64.tar.gz
          mv build-aosp_cf_riscv64_phone/aosp_cf_riscv64_phone.tar.gz build/riscv64.tar.gz

      - name: Docker Metadata
        id: docker-metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=edge
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=schedule

      - name: Set up QEMU
        uses: ./.github/actions/setup-qemu

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/riscv64
          push: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
          tags: ${{ steps.docker-metadata.outputs.tags }}
          labels: ${{ steps.docker-metadata.outputs.labels }}
