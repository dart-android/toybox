name: schedule

on:
  push:
    branches:
      - '**'
    tags:
      - '**'
  pull_request:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  latest:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        branch: [aosp-android-gsi, aosp-android-latest-release]

    outputs:
      aosp-android-gsi-builds: ${{ steps.builds.outputs.aosp-android-gsi-builds }}
      aosp-android-latest-release-builds: ${{ steps.builds.outputs.aosp-android-latest-release-builds }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get ${{ matrix.branch }}
        id: builds
        run: |
          if ${{ github.ref_type == 'tag' }}; then
            echo "${{ matrix.branch }}-builds=$(libexec/${{ matrix.branch }} | yq 'filter(.buildId == "${{ github.ref_name }}")')" | tee -a "$GITHUB_OUTPUT"
          else
            echo "${{ matrix.branch }}-builds=$(libexec/${{ matrix.branch }})" | tee -a "$GITHUB_OUTPUT"
          fi

  aosp-android-gsi:
    needs: [latest]
    if: needs.latest.outputs.aosp-android-gsi-builds != '[]'
    permissions:
      packages: write
    uses: ./.github/workflows/build.yml
    with:
      builds: ${{ needs.latest.outputs.aosp-android-gsi-builds }}
    secrets: inherit

  aosp-android-latest-release:
    needs: [latest]
    if: needs.latest.outputs.aosp-android-latest-release-builds != '[]'
    permissions:
      packages: write
    uses: ./.github/workflows/build.yml
    with:
      builds: ${{ needs.latest.outputs.aosp-android-latest-release-builds }}
      latest: true
    secrets: inherit
